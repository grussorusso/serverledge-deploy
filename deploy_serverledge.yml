---
- name: Install Docker
  hosts: 
    - sedge_Edge
    - sedge_Cloud

  tasks:
    - name: "Install Docker using role"
      include_role:
        role: geerlingguy.docker
      when: ansible_facts['distribution'] != "Amazon"

    - name: "Install Docker on Amazon Linux"
      block:
        - name: Check for Docker
          ansible.builtin.shell: "docker ps > /dev/null"
          register: check
          ignore_errors: True

        - name: Install Docker
          ansible.builtin.command: amazon-linux-extras install -y docker
          become: yes
          when: check.failed

        - name: Start docker
          ansible.builtin.command: systemctl start docker
          become: yes
      when: ansible_facts['distribution'] == "Amazon"


    - name: Add user to docker group
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        state: present
        append: yes
        groups: docker
      become: yes

    - name: reset ssh connection
      meta: reset_connection
      when: groupupdated

- name: Install Etcd
  hosts: sedge_Cloud[0]
  roles:
    - role: etcd
      wipe_etcd: true



- name: Install ServerlEdge at the Edge
  hosts: sedge_Edge
  vars:
    conf_template: edge-configuration.yaml.j2

  roles:
    - serverledge

- name: Install ServerlEdge in all Cloud nodes
  hosts: sedge_Cloud
  vars:
    conf_template: cloud-configuration.yaml.j2
  tasks:
    - include_role: 
        name: serverledge
      when: "{{ groups['sedge_Cloud'] | length | int }} < 2"

- name: Install ServerlEdge in all Cloud nodes but one
  hosts: sedge_Cloud[1:]
  vars:
    conf_template: cloud-configuration.yaml.j2
  tasks:
    - include_role: 
        name: serverledge
      when: "{{ groups['sedge_Cloud'] | length | int }} > 1"

- name: Install LB in the Cloud
  hosts: sedge_Cloud[0]
  vars: 
    conf_template: lb-configuration.yaml.j2

  tasks:
    - include_role: 
        name: serverledge_lb
      when: "{{ groups['sedge_Cloud'] | length | int }} > 1"
